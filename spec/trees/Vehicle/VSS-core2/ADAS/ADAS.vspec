# Copyright (c) 2016 Contributors to COVESA
#
# This program and the accompanying materials are made available under the
# terms of the Mozilla Public License 2.0 which is available at
# https://www.mozilla.org/en-US/MPL/2.0/
#
# SPDX-License-Identifier: MPL-2.0

#
# All Advanced Driver Assist System signals
#
# Three signals are commonly used to describe status of a system.
#
# For systems that only takes action under specific circumstances (like ABS) two signals are often used:
# IsEnabled indicates that the system has been turned on, is monitoring and is ready to take action
# IsEngaged indicates that the system is currently taking action (e.g. regulating brake pressure)
#
# For systems that are taking action over an longer period of time (like Cruise Control) two signals are often used:
# IsEnabled indicates that the system is enabled and available for e.g. configuration, but it is not yet taking action.
# IsActive indicates that the system has been turned on and is continuously taking action,
# (e.g. regulating speed and brakes)
#

ActiveAutonomyLevel:
  datatype: string
  type: sensor
  allowed: [
    'SAE_0',
    'SAE_1',
    'SAE_2_DISENGAGING',
    'SAE_2',
    'SAE_3_DISENGAGING',
    'SAE_3',
    'SAE_4_DISENGAGING',
    'SAE_4',
    'SAE_5_DISENGAGING',
    'SAE_5'
  ]
  description: Indicates the currently active level of driving automation according to
               the SAE J3016 (Taxonomy and Definitions for Terms Related to Driving Automation Systems for On-Road Motor Vehicles).
  comment: Complies with https://www.sae.org/standards/content/j3016_202104/ and https://www.sae.org/blog/sae-j3016-update.
           Level 5 and 4 ADS (Automated driving system) disengage, if appropriate, only after it achieves a minimal risk condition or a driver is performing the DDT.
           Level 3 ADS disengages either an appropriate time after issuing a request to intervene or immediately upon user request.
           Level 2 DAS (Driving automation system) disengages immediately upon driver request.
           However, since many Level 2 DAS, often termed "Level 2.5", warn the driver shortly before reaching their operational limits,
           the VSS also supports the DISENGAGING state for SAE_2.
           Nevertheless, it should be noted that the SAE J3016 states that it is incorrect to describe driving automation features using fractional levels.

SupportedAutonomyLevel:
  datatype: string
  type: attribute
  allowed: [
    'SAE_0', # No Driving Automation
    'SAE_1', # Driver Assistance
    'SAE_2', # Partial Driving Automation
    'SAE_3', # Conditional Driving Automation
    'SAE_4', # High Driving Automation
    'SAE_5'  # Full Driving Automation
  ]
  description: Indicates the highest level of driving automation according to the SAE J3016 taxonomy the vehicle is capable of.

CruiseControl:
  type: branch
  description: Signals from Cruise Control system.

CruiseControl.IsEnabled:
  datatype: boolean
  type: actuator
  description: Indicates if cruise control system is enabled (e.g. ready to receive configurations and settings)
               True = Enabled. False = Disabled.

CruiseControl.IsActive:
  datatype: boolean
  type: actuator
  description: Indicates if cruise control system is active (i.e. actively controls speed).
               True = Active. False = Inactive.

CruiseControl.SpeedSet:
  datatype: float
  type: actuator
  unit: km/h
  description: Set cruise control speed in kilometers per hour.

CruiseControl.IsError:
  datatype: boolean
  type: sensor
  description: Indicates if cruise control system incurred an error condition. True = Error. False = No Error.

CruiseControl.IsAdaptive:
  datatype: boolean
  type: actuator
  description: Indicates if cruise control system is adaptive (i.e. actively controls speed).

CruiseControl.AdaptiveDistanceSet:
  datatype: float
  type: actuator
  unit: m
  min: 0.0
  description: Distance in meters to keep from lead vehicle

CruiseControl.AdaptiveIntervalSet:
  datatype: uint8
  type: actuator
  description: Follow distance setting, commonly 1-5 with 1 being closest.

#
# Lane Departure Detection System
#
LaneDepartureDetection:
  type: branch
  description: Signals from Lane Departure Detection System.

LaneDepartureDetection.IsEnabled:
  datatype: boolean
  type: actuator
  description: Indicates if lane departure detection system is enabled. True = Enabled. False = Disabled.

LaneDepartureDetection.IsWarning:
  datatype: boolean
  type: sensor
  description: Indicates if lane departure detection registered a lane departure.

LaneDepartureDetection.IsError:
  datatype: boolean
  type: sensor
  description: Indicates if lane departure system incurred an error condition. True = Error. False = No Error.

#
# Obstacle Sensor System
#
ObstacleDetection:
  type: branch
  instances:
    - ["Front", "Rear"]
    - ["Left", "Center", "Right"]
  description: Signals form Obstacle Sensor System.

ObstacleDetection.IsEnabled:
  datatype: boolean
  type: actuator
  description: Indicates if obstacle sensor system is enabled (i.e. monitoring for obstacles).
               True = Enabled. False = Disabled.

ObstacleDetection.IsWarning:
  datatype: boolean
  type: sensor
  description: Indicates if obstacle sensor system registered an obstacle.

ObstacleDetection.IsError:
  datatype: boolean
  type: sensor
  description: Indicates if obstacle sensor system incurred an error condition. True = Error. False = No Error.

ObstacleDetection.Distance:
  datatype: float
  type: sensor
  unit: m
  min: 0.0
  description: Distance in meters to detected object

ObstacleDetection.TimeGap:
  datatype: uint32
  type: sensor
  unit: ms
  description: Time in milliseconds before potential impact object

ObstacleDetection.WarningType:
  datatype: string
  type: sensor
  allowed: [
    'UNDEFINED',      # Object detection warning not further categorized
    'CROSS_TRAFFIC',  # Detected object is on an indirect trajectory that may intersect
    'BLIND_SPOT',     # Detected object may not be in driver line of sight, including from mirrors
    ]
  description: Indicates the type of obstacle warning detected as some track not only the presence of an obstacle but potential intercepting trajectory or other characteristics.
  comment: Undefined obstacle warning type would merely alert of presence of obstacle and may measure distance.

#
# Antilock Braking System
#
ABS:
  type: branch
  description: Antilock Braking System signals.

ABS.IsEnabled:
  datatype: boolean
  type: actuator
  description: Indicates if ABS is enabled. True = Enabled. False = Disabled.

ABS.IsError:
  datatype: boolean
  type: sensor
  description: Indicates if ABS incurred an error condition. True = Error. False = No Error.

ABS.IsEngaged:
  datatype: boolean
  type: sensor
  description: Indicates if ABS is currently regulating brake pressure. True = Engaged. False = Not Engaged.


#
# Traction Control System
#
TCS:
  type: branch
  description: Traction Control System signals.

TCS.IsEnabled:
  datatype: boolean
  type: actuator
  description: Indicates if TCS is enabled. True = Enabled. False = Disabled.

TCS.IsError:
  datatype: boolean
  type: sensor
  description: Indicates if TCS incurred an error condition. True = Error. False = No Error.

TCS.IsEngaged:
  datatype: boolean
  type: sensor
  description: Indicates if TCS is currently regulating traction. True = Engaged. False = Not Engaged.


#
# Electronic Stability Control System
#
ESC:
  type: branch
  description: Electronic Stability Control System signals.

ESC.IsEnabled:
  datatype: boolean
  type: actuator
  description: Indicates if ESC is enabled. True = Enabled. False = Disabled.

ESC.IsError:
  datatype: boolean
  type: sensor
  description: Indicates if ESC incurred an error condition. True = Error. False = No Error.

ESC.IsEngaged:
  datatype: boolean
  type: sensor
  description: Indicates if ESC is currently regulating vehicle stability. True = Engaged. False = Not Engaged.

ESC.IsStrongCrossWindDetected:
  datatype: boolean
  type: sensor
  description: Indicates if the ESC system is detecting strong cross winds.
               True = Strong cross winds detected. False = No strong cross winds detected.

ESC.RoadFriction:
  type: branch
  description: Road friction values reported by the ESC system.

ESC.RoadFriction.MostProbable:
  datatype: float
  type: sensor
  unit: percent
  min: 0
  max: 100
  description: Most probable road friction, as calculated by the ESC system.
               Exact meaning of most probable is implementation specific.
               0 = no friction, 100 = maximum friction.

ESC.RoadFriction.LowerBound:
  datatype: float
  type: sensor
  unit: percent
  min: 0
  max: 100
  description: Lower bound road friction, as calculated by the ESC system.
               5% possibility that road friction is below this value.
               0 = no friction, 100 = maximum friction.

ESC.RoadFriction.UpperBound:
  datatype: float
  type: sensor
  unit: percent
  min: 0
  max: 100
  description: Upper bound road friction, as calculated by the ESC system.
               95% possibility that road friction is below this value.
               0 = no friction, 100 = maximum friction.

#
# Electronic Brakeforce Distribution (EBD)
#
EBD:
  type: branch
  description: Electronic Brakeforce Distribution (EBD) System signals.

EBD.IsEnabled:
  datatype: boolean
  type: actuator
  description: Indicates if EBD is enabled. True = Enabled. False = Disabled.

EBD.IsError:
  datatype: boolean
  type: sensor
  description: Indicates if EBD incurred an error condition. True = Error. False = No Error.

EBD.IsEngaged:
  datatype: boolean
  type: sensor
  description: Indicates if EBD is currently regulating vehicle brakeforce distribution.
               True = Engaged. False = Not Engaged.

#
# Emergency Brake Assist (EBA)
#
EBA:
  type: branch
  description: Emergency Brake Assist (EBA) System signals.

EBA.IsEnabled:
  datatype: boolean
  type: actuator
  description: Indicates if EBA is enabled. True = Enabled. False = Disabled.

EBA.IsError:
  datatype: boolean
  type: sensor
  description: Indicates if EBA incurred an error condition. True = Error. False = No Error.

EBA.IsEngaged:
  datatype: boolean
  type: sensor
  description: Indicates if EBA is currently regulating brake pressure. True = Engaged. False = Not Engaged.

#
# Driver Monitoring System (DMS)
#
DMS:
  type: branch
  description: Driver Monitoring System signals.

DMS.IsEnabled:
  datatype: boolean
  type: actuator
  description: Indicates if DMS is enabled. True = Enabled. False = Disabled.

DMS.IsWarning:
  datatype: boolean
  type: sensor
  description: Indicates if DMS has registered a driver alert condition.

DMS.IsError:
  datatype: boolean
  type: sensor
  description: Indicates if DMS incurred an error condition. True = Error. False = No Error.

#include include/PowerOptimize.vspec
